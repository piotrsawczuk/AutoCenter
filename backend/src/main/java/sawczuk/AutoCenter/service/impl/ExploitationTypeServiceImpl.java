package sawczuk.AutoCenter.service.impl;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import sawczuk.AutoCenter.exception.ResourceNotFoundException;
import sawczuk.AutoCenter.model.ExploitationType;
import sawczuk.AutoCenter.repository.ExploitationTypeRepository;
import sawczuk.AutoCenter.service.ExploitationTypeService;

import java.util.List;

@Service
public class ExploitationTypeServiceImpl implements ExploitationTypeService {

    private ExploitationTypeRepository exploitationTypeRepository;

    @Autowired
    public ExploitationTypeServiceImpl(ExploitationTypeRepository exploitationTypeRepository) {
        this.exploitationTypeRepository = exploitationTypeRepository;
    }

    @Override
    public ExploitationType findByExploitationTypeIgnoreCase(String exploitationTypeName) throws ResourceNotFoundException {
        ExploitationType exploitationType = exploitationTypeRepository.findByExploitationTypeIgnoreCase(exploitationTypeName);
        if (exploitationType == null)
            throw new ResourceNotFoundException("Exploitation type", "exploitationTypeName", exploitationTypeName);
        return exploitationType;
    }

    @Override
    public ExploitationType findByValue(Integer value) throws ResourceNotFoundException {
        ExploitationType exploitationType = exploitationTypeRepository.findByValue(value);
        if (exploitationType == null)
            throw new ResourceNotFoundException("Exploitation type", "value", value);
        return exploitationType;
    }

    @Override
    public List<ExploitationType> findAll() throws ResourceNotFoundException {
        List<ExploitationType> exploitationTypeList = exploitationTypeRepository.findAll();
        if (exploitationTypeList == null || exploitationTypeList.isEmpty())
            throw new ResourceNotFoundException("Exploitation type list");
        return exploitationTypeList;
    }
}
